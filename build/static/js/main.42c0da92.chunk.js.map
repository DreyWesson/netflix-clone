{"version":3,"sources":["axios.js","requests.js","components/Banner.js","components/Nav.js","components/Row.js","App.js","reportWebVitals.js","actions/actionTypes.js","reducers/scrollReducer.js","reducers/rootReducer.js","index.js"],"names":["instance","axios","create","baseURL","REACT_APP_APIKEY","process","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","random","length","fetchData","console","log","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","src","alt","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","videoId","opts","height","width","playerVars","autoplay","map","onClick","movieName","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","err","confirm","handleClick","poster_path","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","actionTypes","initialState","hideOnScroll","scrollReducer","state","action","type","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42c0da92.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;\n","const { REACT_APP_APIKEY } = process.env;\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${REACT_APP_APIKEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${REACT_APP_APIKEY}&with_networks=213`,\n  fetchTopRated: `/movie/top_rated?api_key=${REACT_APP_APIKEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${REACT_APP_APIKEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${REACT_APP_APIKEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${REACT_APP_APIKEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${REACT_APP_APIKEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${REACT_APP_APIKEY}&with_genres=99`,\n};\n\nexport default requests;\n","import \"./Banner.css\";\nimport axios from \"../axios\";\n\nimport React, { useEffect, useState } from \"react\";\nimport requests from \"../requests\";\n\nconst Banner = () => {\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n\n      setMovie(\n        request.data.results[\n          (Math.random() * request.data.results.length - 1) | 0\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n  console.log(movie);\n\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${movie?.backdrop_path})`,\n        backgroundPosition: \"top center\",\n      }}\n    >\n      <div className=\"banner__contents\">\n        <h1 className=\"banner__title\">\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n        <div className=\"banner__buttons\">\n          <button className=\"banner__button\">Play</button>\n          <button className=\"banner__button\">My List</button>\n        </div>\n        <h1 className=\"banner__description\">\n          {truncate(movie?.overview, 150)}\n        </h1>\n      </div>\n      <div className=\"banner__fadeBottom\" />\n    </header>\n  );\n};\n\nexport default Banner;\n","import \"./Nav.css\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Nav = () => {\n  const [show, handleShow] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      window.scrollY > 100 ? handleShow(true) : handleShow(false);\n\n      return () => window.removeEventListener(\"scroll\");\n    });\n  }, []);\n  return (\n    <div className={`nav ${show && \"nav__black\"}`}>\n      <img\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1280px-Netflix_2015_logo.svg.png\"\n        className=\"nav__logo\"\n        alt=\"netflix logo\"\n      />\n      <img\n        className=\"nav__avatar\"\n        src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\n        alt=\"\"\n      />\n    </div>\n  );\n};\n\nexport default Nav;\n","import axios from \"../axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Row.css\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nconst baseurl = \"https://image.tmdb.org/t/p/original/\";\nconst Row = ({ title, fetchUrl, isLargeRow }) => {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  console.log(trailerUrl);\n  console.log(movies);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      // console.log(request);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  // console.log(movies);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = (movie) => {\n    if (trailerUrl) setTrailerUrl(\"\");\n    else {\n      let movieName = movie?.name || \"\";\n      // movieTrailer(movie?.name || \"\")\n      movieTrailer(movieName)\n        .then((url) => {\n          const urlParams = new URLSearchParams(new URL(url).search);\n          setTrailerUrl(urlParams.get(\"v\"));\n        })\n        .catch((err) => {\n          const confirmation = window.confirm(\n            \"Oops, no trailer for this movie as of now!. Watch random trailer\"\n          );\n          let movieName = [\n            \"Star wars\",\n            \"Ocean Eleven\",\n            \"The Crown and the Dragon\",\n            \"Dark Phoenix\",\n          ];\n          confirmation &&\n            movieTrailer(\n              movieName[(Math.random() * movieName.length) | 0]\n            ).then((url) => {\n              const urlParams = new URLSearchParams(new URL(url).search);\n              setTrailerUrl(urlParams.get(\"v\"));\n            });\n        });\n    }\n  };\n  console.log(trailerUrl);\n  return (\n    <div className=\"row\">\n      <h2 className=\"row__title\">{title}</h2>\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n\n      <div className=\"row__posters\">\n        {movies.map((movie) => {\n          return (\n            <img\n              key={movie?.id}\n              onClick={() => handleClick(movie)}\n              className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n              src={`${baseurl}${\n                isLargeRow ? movie.poster_path : movie.backdrop_path\n              }`}\n              alt={movie.name}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Row;\n","import \"./App.css\";\nimport Banner from \"./components/Banner\";\nimport Nav from \"./components/Nav\";\nimport Row from \"./components/Row\";\nimport requests from \"./requests\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const actionTypes = {\n  SET_SCROLL: \"SET_SCROLL\",\n};\n","import { actionTypes } from \"../actions/actionTypes\";\n\nexport const initialState = {\n  hideOnScroll: null,\n};\n\nconst scrollReducer = (state = initialState, action) => {\n  console.log(\"💪Scroll Action💪 \", action);\n  switch (action.type) {\n    case actionTypes.SET_SCROLL:\n      return {\n        ...state,\n        hideOnScroll: action.hideOnScroll,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default scrollReducer;\n","import { combineReducers } from \"redux\";\nimport scrollReducer from \"./scrollReducer\";\nconst rootReducer = combineReducers({ scrollReducer });\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nconsole.log(\"👇List of Reducers Stored in STATE 👇\", store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}